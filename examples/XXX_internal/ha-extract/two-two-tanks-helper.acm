class Main(simulator) 
  private 
    x1 := 1; x1' := 2;  
    x2 := 1; x2' := -3;
    x12 := 2; x12' := -1; // Helper variable added!
    modeX := "Fill1";
    y1 := 1; y1' := 2;  
    y2 := 1; y2' := -3;
    y12 := 2; y12' := -1; // Helper variable added!
    modeY := "Fill1" 
  end
  switch modeX
    case "Fill1" 
      claim x1  >= 0 && 
            x2  >= 0 && 
            x12 >= 0 && 
            x12 == x1 + x2 // Constraint added
      if x2 <= 0 modeX := "Fill2" end; 
      x1'  = 2; 
      x2'  = -3;
      x12' = -1;
    case "Fill2" 
      claim x1 >= 0 && 
            x2 >= 0 && 
            x12 >= 0 && 
            x12 == x1 + x2 // Constraint added
      if x1 <= 0 modeX := "Fill1" end; 
      x1'  = -2; 
      x2'  = 1;
      x12' = -1; // x12' = x1' + x2' 
  end;
  switch modeY
    case "Fill1" 
      claim y1  >= 0 && 
            y2  >= 0 && 
            y12 >= 0 && 
            y12 == y1 + y2 // Constraint added
      if y2 <= 0 modeY := "Fill2" end; 
      y1'  = 2; 
      y2'  = -3;
      y12' = -1;
    case "Fill2" 
      claim y1 >= 0 && 
            y2 >= 0 && 
            y12 >= 0 && 
            y12 == y1 + y2 // Constraint added
      if y1 <= 0 modeY := "Fill1" end; 
      y1'  = -2; 
      y2'  = 1;
      y12' = -1; // y12' = y1' + y2' 
  end;
  simulator.endTime := 2.0; // Just before zeno! So that it terminated
                            // with the Traditional semantics
  simulator.minSolverStep := 2.5;
  simulator.minLocalizationStep := 0.00001;
  simulator.minComputationImprovement := 0;
end
